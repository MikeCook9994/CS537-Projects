Name: Michael Cook
CSL-ID: cook
Name: Giang Nguyen
CSL-ID: giang

Implementation Details:
Part A of this project inserts an unallocated page at the top of the address
so null pointer are possible and the thus the program can crash int he event
that one is deferenced. 

This is done simply with 3 changes:
1) Modifying the exec function such that it starts allocating pages at the
second page.
2) Changing copyuvm to also start copying pages at the second page
3) modifying the makefile to notify the system that program execution starts
at the second page

Part B of the project modifies nearly the entire layout of the user program's
address space. It moves the stack to the bottom of the userspace and allows
it to grow dynamically upwards. The Heap now begins directly beneath the code
segment and grows dynamically downwards. The stack and heap are allowed to
grow towards eachother until their is exactly a one page gap between them.

This is done with a number of changes:
1) The initial page of the stack is allocated at the last page of the user
program's vm
2) copyuvm is modified such that it copies the stack independly of the
code and heap segments into the proper pages
3) modifying trap.c so the stack can dynamically allocate pages.
4) modifyiung growpoc such that the heap will not extend into the page
directly adjacent to the stack

irespective of part A and B, the syscall.c file is modified to make the
appropiate bounds checks now that the user space has been so significantly
modified.
